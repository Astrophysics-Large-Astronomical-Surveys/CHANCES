import os
import requests
import subprocess
import pandas as pd

def descargar_archivo_desde_url(url, nombre_archivo, directorio):
    try:
        # Realizar la solicitud GET para descargar el archivo
        response = requests.get(url)
        # Verificar si la solicitud fue exitosa (código de estado 200)
        if response.status_code == 200:
            # Crear el directorio si no existe
            if not os.path.exists(directorio):
                os.makedirs(directorio)
            # Construir la ruta completa del archivo descargado
            ruta_completa = os.path.join(directorio, nombre_archivo)
            # Escribir el contenido de la respuesta en un archivo local
            with open(ruta_completa, 'wb') as archivo:
                archivo.write(response.content)
            print("¡Archivo descargado exitosamente en:", ruta_completa, "!")
            # Descomprimir el archivo utilizando funpack y eliminar el archivo comprimido
            subprocess.run(["funpack", ruta_completa])
            os.remove(ruta_completa)  # Eliminar el archivo comprimido (.fz)
            print("Archivo descomprimido exitosamente y archivos .fz eliminados.")
        else:
            print("Error al descargar el archivo. Código de estado:", response.status_code)
    except Exception as e:
        print("Ocurrió un error:", str(e))

# Nombre del archivo CSV que deseas leer
nombre_archivo_csv = "Bricks_DECaLS_Fornax.csv"
# Nombre de la columna que deseas leer
nombre_columna = "brickname"
df = pd.read_csv(nombre_archivo_csv)
# Obtener los valores de la columna especificada y convertirlos en una lista
lista_bricks = df[nombre_columna].tolist()

lista_filtros = ['g','r','i','z']
        
for brick in lista_bricks:
    brick_corto = brick[:3]
    for filtro in lista_filtros:
        # URL del archivo que deseas descargar
        url = f"https://portal.nersc.gov/cfs/cosmo/data/legacysurvey/dr10/south/coadd/{brick_corto}/{brick}/legacysurvey-{brick}-image-{filtro}.fits.fz"
        # Nombre con el que deseas guardar el archivo descargado
        nombre_archivo = f"{brick}_{filtro}.fits.fz"
        # Directorio donde deseas guardar el archivo descargado
        directorio = f"Campos/{brick}"
        # Llamar a la función para descargar el archivo desde la URL
        descargar_archivo_desde_url(url, nombre_archivo, directorio)
